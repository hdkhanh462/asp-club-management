@using IctuTaekwondo.Shared.Enums
@model ToastMessageModelView

<div id="@Model.GetHtmlId()" class="flex w-full items-center rounded-lg border bg-white p-4 text-gray-500 shadow-lg dark:text-gray-400 dark:bg-gray-800" role="alert">
	<div>
		<div class="flex items-center">
			@if (Model.Type == ToastType.Info)
			{
				<div class="shrink-0 inline-flex h-8 w-8 items-center justify-center rounded-lg bg-blue-100 text-blue-500 dark:bg-blue-800 dark:text-blue-200">
					<svg class="size-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
						<path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm9.408-5.5a1 1 0 1 0 0 2h.01a1 1 0 1 0 0-2h-.01ZM10 10a1 1 0 1 0 0 2h1v3h-1a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2h-1v-4a1 1 0 0 0-1-1h-2Z" clip-rule="evenodd" />
					</svg>
					<span class="sr-only">Info Icon</span>
				</div>
			}
			else if (Model.Type == ToastType.Warning)
			{
				<div class="shrink-0 inline-flex h-8 w-8 items-center justify-center rounded-lg bg-orange-100 text-orange-500 dark:bg-orange-700 dark:text-orange-200">
					<svg class="h-5 w-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
						<path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM10 15a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-4a1 1 0 0 1-2 0V6a1 1 0 0 1 2 0v5Z" />
					</svg>
					<span class="sr-only">Warning Icon</span>
				</div>
			}
			else if (Model.Type == ToastType.Success)
			{
				<div class="shrink-0 inline-flex h-8 w-8 items-center justify-center rounded-lg bg-green-100 text-green-500 dark:bg-green-800 dark:text-green-200">
					<svg class="size-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
						<path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
					</svg>
					<span class="sr-only">Success Icon</span>
				</div>
			}
			else if (Model.Type == ToastType.Error)
			{
				<div class="shrink-0 inline-flex h-8 w-8 items-center justify-center rounded-lg bg-red-100 text-red-500 dark:bg-red-800 dark:text-red-200">
					<svg class="h-5 w-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
						<path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z" />
					</svg>
					<span class="sr-only">Error Icon</span>
				</div>
			}

			<div class="ms-3 text-sm font-medium">@Model.Message</div>
		</div>

		@if (Model.Errors.Any())
		{
			<ul class="mt-1.5 text-sm text-red-800 dark:text-red-400">
				@foreach (var error in Model.Errors)
				{
					<li>@error.ErrorMessage</li>
				}
			</ul>
		}
	</div>

	<button data-dismiss-target="#@Model.GetHtmlId()" type="button" class="-mx-1.5 -my-1.5 ms-auto inline-flex h-8 w-8 items-center justify-center rounded-lg bg-white p-1.5 text-gray-400 hover:text-gray-900 hover:bg-gray-100 focus:ring-2 focus:ring-gray-300 dark:text-gray-500 dark:bg-gray-800 dark:hover:text-white dark:hover:bg-gray-700" aria-label="Close">
		<span class="sr-only">Close</span>
		<svg class="h-3 w-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
			<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
		</svg>
	</button>
</div>

